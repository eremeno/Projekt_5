"""Projekt: Vylep≈°en√Ω task manager"""

import mysql.connector
from mysql.connector import Error
from mysql.connector.connection import MySQLConnection
from datetime import date

DB_NAME = 'spravce_ukolu'

def vytvoreni_db() -> None:
    """
    Vytvo≈ô√≠ datab√°zi s n√°zvem 'spravce_ukolu', pokud je≈°tƒõ neexistuje.
    P≈ôipoj√≠ se k MySQL serveru a vytvo≈ô√≠ datab√°zi s UTF-8 nastaven√≠m.
    """
    try:
        conn = mysql.connector.connect(
            host='localhost',
            user='root',
            password='1111'
        )
        cursor = conn.cursor()
        cursor.execute(
            f"CREATE DATABASE IF NOT EXISTS {DB_NAME} CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
        )
        print(f"‚úÖ Datab√°ze '{DB_NAME}' byla vytvo≈ôena nebo ji≈æ existuje.")
        cursor.close()
        conn.close()
    except Error as e:
        print(f"‚ùå Chyba p≈ôi vytv√°≈ôen√≠ datab√°ze: {e}")

def pripojeni_db() -> MySQLConnection | None:
    """
    P≈ôipoj√≠ se k datab√°zi 'spravce_ukolu'.

    Returns:
        MySQLConnection | None: Aktivn√≠ p≈ôipojen√≠ nebo None p≈ôi chybƒõ.
    """
    try:
        conn = mysql.connector.connect(
            host='localhost',
            user='root',
            password='1111',
            database=DB_NAME
        )
        return conn
    except Error as e:
        print(f"‚ùå Chyba p≈ôi p≈ôipojen√≠ k datab√°zi: {e}")
        return None

def vytvoreni_tabulky(conn: MySQLConnection) -> None:
    """
    Vytvo≈ô√≠ tabulku 'ukoly', pokud je≈°tƒõ neexistuje.

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.
    """
    try:
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS ukoly (
                id INT AUTO_INCREMENT PRIMARY KEY,
                nazev VARCHAR(255) NOT NULL,
                popis VARCHAR(255) NOT NULL,
                stav ENUM('Nezah√°jeno', 'Prob√≠h√°', 'Hotovo') DEFAULT 'Nezah√°jeno',
                datum_vytvoreni DATE NOT NULL DEFAULT (CURRENT_DATE)
            )
        ''')
        conn.commit()
        print("‚úÖ Tabulka 'ukoly' byla vytvo≈ôena nebo ji≈æ existuje.")
    except Error as e:
        print(f"‚ùå Chyba p≈ôi vytv√°≈ôen√≠ tabulky: {e}")

def pridat_ukol(conn: MySQLConnection, nazev: str, popis: str) -> None:
    """
    P≈ôid√° nov√Ω √∫kol do tabulky 'ukoly'.

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.
        nazev (str): N√°zev √∫kolu.
        popis (str): Popis √∫kolu.

    Raises:
        Error: Pokud jsou vstupn√≠ hodnoty pr√°zdn√©.
    """
    if not nazev or not popis:
        raise Error("N√°zev a popis √∫kolu nesm√≠ b√Ωt pr√°zdn√©")
    
    cursor = conn.cursor()
    cursor.execute(
        "INSERT INTO ukoly (nazev, popis) VALUES (%s, %s)",
        (nazev, popis)
    )
    conn.commit()
    cursor.close()

def zobrazit_ukoly(conn: MySQLConnection) -> None:
    """
    Zobraz√≠ seznam √∫kol≈Ø se stavem 'Nezah√°jeno' nebo 'Prob√≠h√°'.

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.
    """
    ukoly = nacist_ukoly(conn)
    filtrovane = [u for u in ukoly if u[3] in ("Nezah√°jeno", "Prob√≠h√°")]

    if not filtrovane:
        print("‚ÑπÔ∏è  Seznam je pr√°zdn√Ω.")
    else:
        print("\n--- Aktivn√≠ √∫koly ---")
        for id, nazev, popis, stav in filtrovane:
            print(f"ID: {id}, N√°zev: {nazev}, Popis: {popis}, Stav: {stav}")

def aktualizovat_ukol(conn: MySQLConnection, id_ukolu: int, novy_stav: str) -> None:
    cursor = conn.cursor()
    cursor.execute("UPDATE ukoly SET stav = %s WHERE id = %s", (novy_stav, id_ukolu))
    conn.commit()
    if cursor.rowcount == 0:
        cursor.close()
        raise Error(f"√ökol s ID {id_ukolu} neexistuje.")
    cursor.close()

def odstranit_ukol(conn: MySQLConnection, id_ukolu: int) -> None:
    """
    Odstran√≠ √∫kol z tabulky 'ukoly' podle ID.

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.
        id_ukolu (int): ID √∫kolu, kter√Ω m√° b√Ωt odstranƒõn.
    """
    cursor = conn.cursor()
    cursor.execute("DELETE FROM ukoly WHERE id = %s", (id_ukolu,))
    conn.commit()
    cursor.close()

def nacist_ukoly(conn: MySQLConnection) -> list[tuple]:
    """
    Naƒçete v≈°echny √∫koly z tabulky 'ukoly' v datab√°zi.

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.

    Returns:
        list[tuple]: Seznam √∫kol≈Ø jako n-tice (id, nazev, popis, stav).
    """
    cursor = conn.cursor()
    cursor.execute("SELECT id, nazev, popis, stav FROM ukoly")
    vysledky = cursor.fetchall()
    cursor.close()
    return vysledky

def hlavni_menu(conn: MySQLConnection) -> None:
    """
    Zobraz√≠ hlavn√≠ menu pro spr√°vu √∫kol≈Ø:
    1. P≈ôidat √∫kol
    2. Zobrazit √∫koly
    3. Aktualizovat √∫kol
    4. Odstranit √∫kol
    5. Ukonƒçit program

    Args:
        conn (MySQLConnection): Aktivn√≠ p≈ôipojen√≠ k datab√°zi.
    """
    while True:
        print("\n===== SPR√ÅVCE √öKOL≈Æ =====")
        print("1. P≈ôidat √∫kol")
        print("2. Zobrazit √∫koly")
        print("3. Aktualizovat √∫kol")
        print("4. Odstranit √∫kol")
        print("5. Ukonƒçit program")

        volba = input("Vyberte akci: ")

        if volba == "1":
            nazev = input("Zadejte n√°zev √∫kolu: ").strip()
            popis = input("Zadejte popis √∫kolu: ").strip()
            if nazev and popis:
                pridat_ukol(conn, nazev, popis)
                print("‚úÖ √ökol byl p≈ôid√°n.")
            else:
                print("‚ùå N√°zev i popis jsou povinn√©.")

        elif volba == "2":
            zobrazit_ukoly(conn)

        elif volba == "3":
            ukoly = nacist_ukoly(conn)
            for id, nazev, _, stav in ukoly:
                print(f"ID: {id}, N√°zev: {nazev}, Stav: {stav}")
            try:
                id_ukolu = int(input("Zadejte ID √∫kolu k aktualizaci: "))
                if not any(u[0] == id_ukolu for u in ukoly):
                    print("‚ùå √ötol s dan√Ωm ID neexistuje.")
                    continue
                print("Zvolte nov√Ω stav: \n 1. Prob√≠h√°\n 2. Hotovo")
                stav_volba = input("Volba: ")
                if stav_volba == "1":
                    novy_stav = "Prob√≠h√°"
                elif stav_volba == "2":
                    novy_stav = "Hotovo"
                else:
                    print("‚ùå Neplatn√° volba stavu.")
                    continue
                aktualizovat_ukol(conn, id_ukolu, novy_stav)
                print("‚úÖ √ötol byl aktualizov√°n.")
            except ValueError:
                print("‚ùå Neplatn√© ID.")

        elif volba == "4":
            ukoly = nacist_ukoly(conn)
            for id, nazev, _, stav in ukoly:
                print(f"ID: {id}, N√°zev: {nazev}, Stav: {stav}")
            try:
                id_ukolu = int(input("Zadejte ID √∫kolu k odstranƒõn√≠: "))
                if not any(u[0] == id_ukolu for u in ukoly):
                    print("‚ùå √ötol s dan√Ωm ID neexistuje.")
                    continue
                odstranit_ukol(conn, id_ukolu)
                print("‚úÖ √ötol byl odstranƒõn.")
            except ValueError:
                print("‚ùå Neplatn√© ID.")

        elif volba == "5":
            print("üëã Ukonƒçuji spr√°vce √∫kol≈Ø.")
            break

        else:
            print("‚ùå Neplatn√° volba, zkuste to znovu.")

if __name__ == "__main__":
    vytvoreni_db()
    conn = pripojeni_db()
    if conn:
        vytvoreni_tabulky(conn)
        hlavni_menu(conn)

        conn.close()
